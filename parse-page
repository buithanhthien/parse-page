#!/usr/bin/env node

const prog  = require('caporal');


function listNums(phrase_num){ 
    var nums = phrase_num.split('-');
    console.log(nums);

    if(nums[0] == '' && nums[1] == '')
	return [0];
    if(nums[0] == '')
	return [nums[1]];
    if(nums[1] == '')
	return [nums[0]];

    var arr = [];
    let a,b;
    if ( parseInt(nums[0]) > parseInt(nums[1])) {
	a = nums[1];
	b = nums[0];
    }
    else{
	a = nums[0];
	b = nums[1];
    }
    for(i = parseInt(a); i <= parseInt(b); i++){
	arr.push(i);

    return arr;
}



function trimValidStr(str){
    let size = str.length;
    var newStr = ''; 

    const validChar = ['1','2','3','4','5','6','7','8','9','0','-',','];

    for ( i = 0 ; i < size ; ++i ){
	if(validChar.includes(str[i])){ 
	    newStr += str[i];
	} 
    }
    return newStr; // test thu function nay coi no hoat dong sao :V
}



function parse(str){
    var _str = trimValidStr(str); //B1 :v 
    var split_str = _str.split(',');
    var split_str_size = split_str.length;

    let check = false;

    var arr = [];
    for(i = 0; i < split_str_size; ++i){
	for(j = 0; j < split_str[i].length; j++){
	    if(split_str[i][j] == '-') check = true;
	}

	    if (check == true){
		arr = arr.concat(listNums(split_str[i])); 
		check = false;
	    }
	    else{
		arr = arr.concat(split_str[i]);  
	    }
	
  }
    
    return arr;
}


prog
    .argument('str','str')
    .action((args, options, logger) => {
	console.log(parse(args.str));
    console.log('ok');
    });


prog
    .command('test')
    .argument('str','str')
    .action((args) => {
	var split_str = args.str.split(','); 
	console.log(split_str);
    });

prog.parse(process.argv);

